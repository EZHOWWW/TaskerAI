"""Create tasks table1

Revision ID: 1bcf60d1bab0
Revises: 
Create Date: 2025-06-23 01:41:59.952091

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1bcf60d1bab0'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('tasks_parent_id_fkey'), 'tasks', type_='foreignkey')
    op.drop_column('tasks', 'description')
    op.drop_column('tasks', 'parent_id')
    op.drop_column('tasks', 'tags')
    op.drop_column('tasks', 'updated_at')
    op.drop_column('tasks', 'priority')
    op.drop_column('tasks', 'embedding')
    op.drop_column('tasks', 'status')
    op.drop_column('tasks', 'level')
    op.drop_column('tasks', 'created_at')
    op.drop_column('tasks', 'complexity')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('tasks', sa.Column('complexity', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('tasks', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('tasks', sa.Column('level', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('tasks', sa.Column('status', postgresql.ENUM('PENDING', 'IN_PROGRESS', 'COMPLETED', 'FAILED', 'CANCELLED', name='taskstatus'), autoincrement=False, nullable=False))
    op.add_column('tasks', sa.Column('embedding', sa.NullType(), autoincrement=False, nullable=True))
    op.add_column('tasks', sa.Column('priority', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('tasks', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('tasks', sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('tasks', sa.Column('parent_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('tasks', sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True))
    op.create_foreign_key(op.f('tasks_parent_id_fkey'), 'tasks', 'tasks', ['parent_id'], ['id'])
    # ### end Alembic commands ###
